from g4f.client import Client as G4FClient
from colorama import Fore
import re
import telebot
from telebot import types
import threading

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞
bot = telebot.TeleBot('7897112705:AAFdWM5Odzdpw7r1htpYFNvUlckX23pIJb8')  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à —Ç–æ–∫–µ–Ω

def AI_answer(text: str, prompt: str = '', request_theme: str = "Metro Exodus", model: str = 'gpt-4o', limit: int = 3, timeout: int = 100) -> str | None:
    def send_request():
        try:
            client = G4FClient()
            print(Fore.GREEN + f"–û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –∫ –º–æ–¥–µ–ª–∏ {model}...")
            response = client.chat.completions.create(
                model=model,
                messages=[{"role": "user", "content": f"{prompt}\n{text}"}]
            )
            return response.choices[0].message.content
        except Exception as e:
            print(Fore.RED + f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∑–∞–ø—Ä–æ—Å–∞: {e}")
            return None

    print(Fore.CYAN + "\n" + "=" * 15 + f"{request_theme}" + "=" * 15)

    for attempt in range(15):
        response = send_request()
        if response:
            clear_text = re.sub(r"[A-Za-z0-9]", "", response)
            clear_text = re.sub(r'\s+', ' ', clear_text.strip())
            if len(clear_text) > limit:
                print(Fore.GREEN + f"–û—Ç–≤–µ—Ç –ø–æ–¥—Ö–æ–¥–∏—Ç, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç.")
                print(Fore.CYAN + "=" * 15 + "="*len(request_theme) + "=" * 15)
                return response.strip()
        print(Fore.RED + f"–ü—Ä–æ—Ü–µ—Å—Å –ø—Ä–µ—Ä–≤–∞–Ω –ø–æ—Å–ª–µ {attempt+1} –ø–æ–ø—ã—Ç–∫–∏.")
        print(Fore.CYAN + "=" * 15 + "="*len(request_theme) + "=" * 15 + "\n")

    return None

@bot.message_handler(commands=['start'])
def start(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add(types.KeyboardButton("üëã –ü–æ–∑–¥–æ—Ä–æ–≤–∞—Ç—å—Å—è"), types.KeyboardButton("‚ùì –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å"))
    bot.send_message(message.chat.id, f"–ü—Ä–∏–≤–µ—Ç, {message.chat.first_name}! –Ø –±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–æ–∂–µ—Ç —Ç–µ–±–µ –≤ –∏–≥—Ä–µ Metro Exodus.", reply_markup=markup)

@bot.message_handler(content_types=['text'])
def func(message):
    if message.text == "üëã –ü–æ–∑–¥–æ—Ä–æ–≤–∞—Ç—å—Å—è":
        bot.send_message(message.chat.id, "–ü—Ä–∏–≤–µ—Ç! –ì–æ—Ç–æ–≤ –ø–æ–º–æ—á—å —Ç–µ–±–µ –≤ –∏–≥—Ä–µ Metro Exodus.")
    elif message.text == "‚ùì –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å":
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        markup.add(types.KeyboardButton("–ì–¥–µ –Ω–∞–π—Ç–∏ —Ä–µ—Å—É—Ä—Å—ã?"), types.KeyboardButton("–ö–∞–∫ –ø—Ä–æ–π—Ç–∏ —Å–ª–æ–∂–Ω—ã–µ —É—á–∞—Å—Ç–∫–∏?"),
                   types.KeyboardButton("–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤—Ä–∞–≥–∞—Ö"), types.KeyboardButton("–ó–∞–¥–∞—Ç—å —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å"),
                   types.KeyboardButton("–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"))
        bot.send_message(message.chat.id, "–ó–∞–¥–∞–π –º–Ω–µ –≤–æ–ø—Ä–æ—Å", reply_markup=markup)
    elif message.text == "–ì–¥–µ –Ω–∞–π—Ç–∏ —Ä–µ—Å—É—Ä—Å—ã?":
        bot.send_message(message.chat.id, "–†–µ—Å—É—Ä—Å—ã –º–æ–∂–Ω–æ –Ω–∞–π—Ç–∏ –≤ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –ª–æ–∫–∞—Ü–∏—è—Ö. –ù–∞–ø—Ä–∏–º–µ—Ä, –≤ –í–æ–ª–≥–µ –º–Ω–æ–≥–æ –º–µ–¥–∏–∫–∞–º–µ–Ω—Ç–æ–≤, –∞ –≤ –¢–∞–π–≥–µ –º–Ω–æ–≥–æ –±–æ–µ–ø—Ä–∏–ø–∞—Å–æ–≤.")
    elif message.text == "–ö–∞–∫ –ø—Ä–æ–π—Ç–∏ —Å–ª–æ–∂–Ω—ã–µ —É—á–∞—Å—Ç–∫–∏?":
        bot.send_message(message.chat.id, "–î–ª—è –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è —Å–ª–æ–∂–Ω—ã—Ö —É—á–∞—Å—Ç–∫–æ–≤ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å–∫—Ä—ã—Ç–Ω–æ—Å—Ç—å –∏ —ç–∫–æ–Ω–æ–º–∏—Ç—å –±–æ–µ–ø—Ä–∏–ø–∞—Å—ã. –í –Ω–µ–∫–æ—Ç–æ—Ä—ã—Ö —Å–ª—É—á–∞—è—Ö –º–æ–∂–Ω–æ –æ–±–æ–π—Ç–∏ –≤—Ä–∞–≥–æ–≤.")
    elif message.text == "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤—Ä–∞–≥–∞—Ö":
        bot.send_message(message.chat.id, "–í –∏–≥—Ä–µ Metro Exodus –µ—Å—Ç—å —Ä–∞–∑–ª–∏—á–Ω—ã–µ —Ç–∏–ø—ã –≤—Ä–∞–≥–æ–≤, –≤–∫–ª—é—á–∞—è –º—É—Ç–∞–Ω—Ç–æ–≤ –∏ –±–∞–Ω–¥–∏—Ç–æ–≤. –ú—É—Ç–∞–Ω—Ç—ã –æ–±—ã—á–Ω–æ —Å–ª–∞–±–µ–µ, –Ω–æ –º–æ–≥—É—Ç –∞—Ç–∞–∫–æ–≤–∞—Ç—å –≥—Ä—É–ø–ø–∞–º–∏. –ë–∞–Ω–¥–∏—Ç—ã –≤–æ–æ—Ä—É–∂–µ–Ω—ã –∏ –º–æ–≥—É—Ç –±—ã—Ç—å –æ–ø–∞—Å–Ω—ã.")
    elif message.text == "–ó–∞–¥–∞—Ç—å —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å":
        bot.send_message(message.chat.id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–¥–∞–π—Ç–µ —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å, –∏ —è –ø–æ—Å—Ç–∞—Ä–∞—é—Å—å –ø–æ–º–æ—á—å –≤–∞–º.")
    elif message.text == "–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é":
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        markup.add(types.KeyboardButton("üëã –ü–æ–∑–¥–æ—Ä–æ–≤–∞—Ç—å—Å—è"), types.KeyboardButton("‚ùì –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å"))
        bot.send_message(message.chat.id, "–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", reply_markup=markup)
    else:
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö –≤–æ–ø—Ä–æ—Å–æ–≤ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º AI
        context = "–í—Å–µ –≤–æ–ø—Ä–æ—Å—ã –∫–∞—Å–∞—é—Ç—Å—è –∏–≥—Ä—ã Metro Exodus. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–≤–µ—Ç—å—Ç–µ –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ —ç—Ç–æ–π –∏–≥—Ä—ã."
        loading_message = bot.send_message(message.chat.id, "–ó–∞–≥—Ä—É–∑–∫–∞...")

        def process_request():
            response = AI_answer(message.text, prompt=context, request_theme="–í–æ–ø—Ä–æ—Å –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ Metro Exodus")
            if response:
                bot.edit_message_text(response, message.chat.id, loading_message.message_id)
            else:
                bot.edit_message_text("–ù–µ –ø–æ–Ω–∏–º–∞—é –≤–∞—à –≤–æ–ø—Ä–æ—Å. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–¥–∞—Ç—å –µ–≥–æ –ø–æ-–¥—Ä—É–≥–æ–º—É –∏–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤.", message.chat.id, loading_message.message_id)

        threading.Thread(target=process_request).start()

bot.polling()